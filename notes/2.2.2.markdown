Property detection has been completely rewritten in 2.2. In many common cases,
`@JsonProperty` annotations will be unnecessary, as the property names will
be read from debugging information contained in the jar file.

New users should be careful not to remove 'vars' debugging information from
their jar files. `javac` includes it by default, so this will not affect
most users, but for size-sensitive projects it is often omitted in not-debug
scenarios. Doing so will break the Scala module which relies on the
presence of constructor parameter name debugging information to correctly
detect Scala property names.

## Fixes in 2.2.2

* [[gh-80]](https://github.com/FasterXML/jackson-module-scala/issues/80)
  Option fields not marked as optional in JSON schema

* [[gh-81]](https://github.com/FasterXML/jackson-module-scala/pull/81)
  Option JsonSchema generation with jackson-module-jsonSchema

## Fixes in 2.2.1

* [[gh-71]](https://github.com/FasterXML/jackson-module-scala/issues/71)
  Support private fields in scala classes when default values are present

* [[gh-73]](https://github.com/FasterXML/jackson-module-scala/issues/73)
  "Conflicting getter definitions" with @BeanProperty

* [[gh-74]](https://github.com/FasterXML/jackson-module-scala/pull/74)
  Serialization of nested case classes, from [David Pratt](https://github.com/dpratt)

* [[gh-75]](https://github.com/FasterXML/jackson-module-scala/pull/75)
  General fixes for less-common field types, from [David Pratt](https://github.com/dpratt)

* [[gh-76]](https://github.com/FasterXML/jackson-module-scala/pull/76)
  Improvement to ScalaObjectMapper, from [David Pratt](https://github.com/dpratt)
